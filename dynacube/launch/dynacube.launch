<launch>
  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find dynacube)/worlds/obstacles.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
 <param name="robot_description"
    command="$(find xacro)/xacro --inorder '$(find dynacube)/urdf/cubedrone.urdf.xacro'" />

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -model drone -param robot_description -x 0 -y -8.5 -z 0.1775"/>

  <param name="ob_description"
         command="$(find xacro)/xacro --inorder '$(find dynacube)/urdf/obstacle.xacro'"/>

  <!-- Run a Python script to send a service call to gazebo_ros to spawn the obstacle model -->
    <node name="obstacle_spawner1" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
          args="-urdf -model obstacle1 -param ob_description -x 0 -y -1 -z 0"/>
    <node name="obstacle_spawner2" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
          args="-urdf -model obstacle2 -param ob_description -x 0 -y 3 -z 0"/>
    <node name="obstacle_spawner3" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
          args="-urdf -model obstacle3 -param ob_description -x 0 -y -5 -z 0"/>
    <node name="obstacle_spawner4" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
          args="-urdf -model obstacle4 -param ob_description -x 0 -y 6 -z 0"/>
    <!-- Add any necessary parameters or arguments if required -->
    <param name="sample_time" value="0.05"/>
  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  
</launch>