<launch>
  <!-- These are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find dynauav)/worlds/obstacles.world"/>
    <arg name="debug" value="$(arg debug)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description"
         command="$(find xacro)/xacro --inorder '$(find dynauav)/urdf/uav_drone.urdf.xacro'"/>

  <!-- Run a Python script to send a service call to gazebo_ros to spawn the UAV model -->
  <node name="uav_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
        args="-urdf -model drone -param robot_description -z 0.2"/>

  <!-- Load the obstacle URDF into the ROS Parameter Server -->
  <param name="ob_description"
         command="$(find xacro)/xacro --inorder '$(find dynauav)/urdf/obstacle.xacro'"/>

  <!-- Run a Python script to send a service call to gazebo_ros to spawn the obstacle model -->
  <node name="obstacle_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
        args="-urdf -model obstacle -param ob_description -x 2 -y 4 -z 1"/>

  <!-- Optional parameters -->
  <param name="sample_time" value="0.05"/>
</launch>
